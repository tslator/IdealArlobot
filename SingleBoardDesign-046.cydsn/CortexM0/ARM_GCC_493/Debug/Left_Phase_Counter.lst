ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Left_Phase_Counter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Left_Phase_Counter_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	Left_Phase_Counter_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	Left_Phase_Counter_Enable, %function
  23              	Left_Phase_Counter_Enable:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Left_Phase_Counter.c"
   1:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * File Name: Left_Phase_Counter.c  
   3:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
   5:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Description:
   6:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
   9:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   Note:
  10:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *     None
  11:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
  12:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
  19:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #include "Left_Phase_Counter.h"
  20:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
  21:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint8 Left_Phase_Counter_initVar = 0u;
  22:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
  23:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
  24:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Init
  26:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
  28:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *     Initialize to the schematic state
  29:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * 
  30:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
  31:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void  
  32:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 2


  33:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
  34:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
  35:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
  36:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_Init(void) 
  38:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
  39:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
  40:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             uint8 ctrl;
  41:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
  42:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
  43:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if(!Left_Phase_Counter_UsingFixedFunction) 
  44:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Interrupt State Backup for Critical Region*/
  45:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             uint8 Left_Phase_Counter_interruptState;
  46:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
  47:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
  48:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (Left_Phase_Counter_UsingFixedFunction)
  49:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL &= Left_Phase_Counter_CTRL_ENABLE;
  51:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  52:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Clear the mode bits for continuous run mode */
  53:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #if (CY_PSOC5A)
  54:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL2 &= ((uint8)(~Left_Phase_Counter_CTRL_MODE_MASK));
  55:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #endif /* (CY_PSOC5A) */
  56:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL3 &= ((uint8)(~Left_Phase_Counter_CTRL_MODE_MASK));      
  58:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #if (Left_Phase_Counter_RunModeUsed != 0x0u)
  61:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL |= Left_Phase_Counter_ONESHOT;
  63:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #endif /* (Left_Phase_Counter_RunModeUsed != 0x0u) */
  64:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  65:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Set the IRQ to use the status register interrupts */
  66:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL2 |= Left_Phase_Counter_CTRL2_IRQ_SEL;
  67:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  68:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 &= ((uint8)(~Left_Phase_Counter_RT1_MASK));
  70:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 |= Left_Phase_Counter_SYNC;     
  71:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                     
  72:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 &= ((uint8)(~Left_Phase_Counter_SYNCDSI_MASK));
  74:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_RT1 |= Left_Phase_Counter_SYNCDSI_EN;
  75:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
  76:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #else
  77:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #if(!Left_Phase_Counter_ControlRegRemoved)
  78:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Set the default compare mode defined in the parameter */
  79:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             ctrl = Left_Phase_Counter_CONTROL & ((uint8)(~Left_Phase_Counter_CTRL_CMPMODE_MASK));
  80:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_CONTROL = ctrl | Left_Phase_Counter_DEFAULT_COMPARE_MODE;
  81:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  82:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Set the default capture mode defined in the parameter */
  83:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             ctrl = Left_Phase_Counter_CONTROL & ((uint8)(~Left_Phase_Counter_CTRL_CAPMODE_MASK));
  84:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  85:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #if( 0 != Left_Phase_Counter_CAPTURE_MODE_CONF)
  86:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL = ctrl | Left_Phase_Counter_DEFAULT_CAPTURE_MODE;
  87:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #else
  88:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                 Left_Phase_Counter_CONTROL = ctrl;
  89:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #endif /* 0 != Left_Phase_Counter_CAPTURE_MODE */ 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 3


  90:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
  91:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             #endif /* (!Left_Phase_Counter_ControlRegRemoved) */
  92:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (Left_Phase_Counter_UsingFixedFunction) */
  93:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
  94:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         /* Clear all data in the FIFO's */
  95:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction)
  96:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_ClearFIFO();
  97:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
  98:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
  99:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         /* Set Initial values from Configuration */
 100:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_WritePeriod(Left_Phase_Counter_INIT_PERIOD_VALUE);
 101:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 102:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_WriteCounter(Left_Phase_Counter_INIT_COUNTER_VALUE);
 103:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 104:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_SetInterruptMode(Left_Phase_Counter_INIT_INTERRUPTS_MASK);
 105:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
 106:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction)
 107:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Read the status register to clear the unwanted interrupts */
 108:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             (void)Left_Phase_Counter_ReadStatusRegister();
 109:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_WriteCompare(Left_Phase_Counter_INIT_COMPARE_VALUE);
 111:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 113:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Enter Critical Region*/
 115:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_interruptState = CyEnterCriticalSection();
 116:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 117:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             Left_Phase_Counter_STATUS_AUX_CTRL |= Left_Phase_Counter_STATUS_ACTL_INT_EN_MASK;
 118:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 119:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Exit Critical Region*/
 120:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             CyExitCriticalSection(Left_Phase_Counter_interruptState);
 121:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 122:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
 123:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 124:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 125:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 126:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 127:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Enable
 128:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 129:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 130:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *     Enable the Counter
 131:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * 
 132:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 133:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void  
 134:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 135:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 136:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 137:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 138:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Side Effects: 
 139:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   on the operation of the counter.
 141:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 142:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_Enable(void) 
 144:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
  26              		.loc 1 144 0
  27              		.cfi_startproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 4


 145:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if (Left_Phase_Counter_UsingFixedFunction)
 147:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE |= Left_Phase_Counter_BLOCK_EN_MASK;
 148:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_STBY_ENABLE |= Left_Phase_Counter_BLOCK_STBY_EN_MASK;
 149:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */  
 150:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
 151:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Enable the counter from the control register  */
 152:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* else make sure reset is clear */
 154:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction)
 155:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_CONTROL |= Left_Phase_Counter_CTRL_ENABLE;                
 156:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction) */
 157:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 158:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
  28              		.loc 1 158 0
  29              		@ sp needed
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE3:
  33              		.size	Left_Phase_Counter_Enable, .-Left_Phase_Counter_Enable
  34 0002 C046     		.section	.text.Left_Phase_Counter_Stop,"ax",%progbits
  35              		.align	2
  36              		.global	Left_Phase_Counter_Stop
  37              		.code	16
  38              		.thumb_func
  39              		.type	Left_Phase_Counter_Stop, %function
  40              	Left_Phase_Counter_Stop:
  41              	.LFB5:
 159:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 160:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 161:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Start
 163:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 165:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Enables the counter for operation 
 166:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 167:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 168:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void  
 169:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 170:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 171:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 172:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 173:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Global variables:
 174:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Left_Phase_Counter_initVar: Is modified when this function is called for the  
 175:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   first time. Is used to ensure that initialization happens only once.
 176:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 177:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 178:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_Start(void) 
 179:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 180:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     if(Left_Phase_Counter_initVar == 0u)
 181:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     {
 182:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_Init();
 183:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
 184:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_initVar = 1u; /* Clear this bit for Initialization */        
 185:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     }
 186:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 187:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Enable the Counter */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 5


 188:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_Enable();        
 189:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 190:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 191:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 192:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 193:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_Stop
 194:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 195:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 196:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 198:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 199:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void  
 200:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 201:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 202:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 203:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 204:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *               has no effect on the operation of the counter.
 206:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 207:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 208:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_Stop(void) 
 209:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
  42              		.loc 1 209 0
  43              		.cfi_startproc
 210:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Disable Counter */
 211:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction)
 212:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_ENABLE));        
 213:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (!Left_Phase_Counter_ControlRegRemoved || Left_Phase_Counter_UsingFixedFunction) */
 214:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 215:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Globally disable the Fixed Function Block chosen */
 216:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if (Left_Phase_Counter_UsingFixedFunction)
 217:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_EN_MASK));
 218:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_STBY_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_STBY_EN_MASK));
 219:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 220:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
  44              		.loc 1 220 0
  45              		@ sp needed
  46 0000 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE5:
  49              		.size	Left_Phase_Counter_Stop, .-Left_Phase_Counter_Stop
  50 0002 C046     		.section	.text.Left_Phase_Counter_SetInterruptMode,"ax",%progbits
  51              		.align	2
  52              		.global	Left_Phase_Counter_SetInterruptMode
  53              		.code	16
  54              		.thumb_func
  55              		.type	Left_Phase_Counter_SetInterruptMode, %function
  56              	Left_Phase_Counter_SetInterruptMode:
  57              	.LFB6:
 221:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 222:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 223:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetInterruptMode
 225:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 227:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 6


 229:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 230:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *                   which will be allowed to generate the counters interrupt.   
 232:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 233:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 234:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 235:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 236:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 237:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_SetInterruptMode(uint8 interruptsMask) 
 238:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
  58              		.loc 1 238 0
  59              		.cfi_startproc
  60              	.LVL0:
 239:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_STATUS_MASK = interruptsMask;
  61              		.loc 1 239 0
  62 0000 014B     		ldr	r3, .L4
  63 0002 1870     		strb	r0, [r3]
 240:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
  64              		.loc 1 240 0
  65              		@ sp needed
  66 0004 7047     		bx	lr
  67              	.L5:
  68 0006 C046     		.align	2
  69              	.L4:
  70 0008 87000F40 		.word	1074724999
  71              		.cfi_endproc
  72              	.LFE6:
  73              		.size	Left_Phase_Counter_SetInterruptMode, .-Left_Phase_Counter_SetInterruptMode
  74              		.section	.text.Left_Phase_Counter_ReadStatusRegister,"ax",%progbits
  75              		.align	2
  76              		.global	Left_Phase_Counter_ReadStatusRegister
  77              		.code	16
  78              		.thumb_func
  79              		.type	Left_Phase_Counter_ReadStatusRegister, %function
  80              	Left_Phase_Counter_ReadStatusRegister:
  81              	.LFB7:
 241:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 242:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 243:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 244:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadStatusRegister
 245:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 246:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 247:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   Reads the status register and returns it's state. This function should use
 248:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 249:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       register may be permuteable.
 250:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 251:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 252:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 253:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 254:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 255:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint8) The contents of the status register
 256:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 257:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Side Effects:
 258:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   Status register bits may be clear on read. 
 259:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 260:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 261:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint8   Left_Phase_Counter_ReadStatusRegister(void) 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 7


 262:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
  82              		.loc 1 262 0
  83              		.cfi_startproc
 263:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     return Left_Phase_Counter_STATUS;
  84              		.loc 1 263 0
  85 0000 014B     		ldr	r3, .L7
  86 0002 1878     		ldrb	r0, [r3]
  87 0004 C0B2     		uxtb	r0, r0
 264:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
  88              		.loc 1 264 0
  89              		@ sp needed
  90 0006 7047     		bx	lr
  91              	.L8:
  92              		.align	2
  93              	.L7:
  94 0008 67000F40 		.word	1074724967
  95              		.cfi_endproc
  96              	.LFE7:
  97              		.size	Left_Phase_Counter_ReadStatusRegister, .-Left_Phase_Counter_ReadStatusRegister
  98              		.section	.text.Left_Phase_Counter_WriteCounter,"ax",%progbits
  99              		.align	2
 100              		.global	Left_Phase_Counter_WriteCounter
 101              		.code	16
 102              		.thumb_func
 103              		.type	Left_Phase_Counter_WriteCounter, %function
 104              	Left_Phase_Counter_WriteCounter:
 105              	.LFB8:
 265:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 266:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 267:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #if(!Left_Phase_Counter_ControlRegRemoved)
 268:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadControlRegister
 270:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 272:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   Reads the control register and returns it's state. This function should use
 273:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
 274:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       register may be permuteable.
 275:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 276:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 277:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 278:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 279:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 280:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint8) The contents of the control register
 281:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 282:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 283:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint8   Left_Phase_Counter_ReadControlRegister(void) 
 284:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 285:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     return Left_Phase_Counter_CONTROL;
 286:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 287:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 288:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 289:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteControlRegister
 291:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 293:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   Sets the bit-field of the control register.  This function should use
 294:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       defined types for the bit-field information as the bits in this
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 8


 295:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *       register may be permuteable.
 296:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 297:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 298:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 299:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 300:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 301:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint8) The contents of the control register
 302:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 303:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void    Left_Phase_Counter_WriteControlRegister(uint8 control) 
 305:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 306:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL = control;
 307:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 308:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 309:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #endif  /* (!Left_Phase_Counter_ControlRegRemoved) */
 310:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 311:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 312:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 313:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 314:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteCounter
 315:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 316:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 317:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   This funtion is used to set the counter to a specific value
 318:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 319:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 320:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  counter:  New counter value. 
 321:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 322:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 323:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void 
 324:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 325:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_WriteCounter(uint32 counter) \
 327:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                                    
 328:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 106              		.loc 1 328 0
 107              		.cfi_startproc
 108              	.LVL1:
 329:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 330:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         /* assert if block is already enabled */
 331:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CYASSERT (0u == (Left_Phase_Counter_GLOBAL_ENABLE & Left_Phase_Counter_BLOCK_EN_MASK));
 332:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         /* If block is disabled, enable it and then write the counter */
 333:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE |= Left_Phase_Counter_BLOCK_EN_MASK;
 334:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_COUNTER_LSB_PTR, (uint16)counter);
 335:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         Left_Phase_Counter_GLOBAL_ENABLE &= ((uint8)(~Left_Phase_Counter_BLOCK_EN_MASK));
 336:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 337:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_COUNTER_LSB_PTR, counter);
 109              		.loc 1 337 0
 110 0000 014B     		ldr	r3, .L10
 111 0002 1860     		str	r0, [r3]
 338:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 339:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 112              		.loc 1 339 0
 113              		@ sp needed
 114 0004 7047     		bx	lr
 115              	.L11:
 116 0006 C046     		.align	2
 117              	.L10:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 9


 118 0008 10200F40 		.word	1074733072
 119              		.cfi_endproc
 120              	.LFE8:
 121              		.size	Left_Phase_Counter_WriteCounter, .-Left_Phase_Counter_WriteCounter
 122              		.section	.text.Left_Phase_Counter_ReadCounter,"ax",%progbits
 123              		.align	2
 124              		.global	Left_Phase_Counter_ReadCounter
 125              		.code	16
 126              		.thumb_func
 127              		.type	Left_Phase_Counter_ReadCounter, %function
 128              	Left_Phase_Counter_ReadCounter:
 129              	.LFB9:
 340:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 341:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 342:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 343:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCounter
 345:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 346:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 347:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Returns the current value of the counter.  It doesn't matter
 348:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * if the counter is enabled or running.
 349:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 350:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 351:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void:  
 352:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 353:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 354:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint32) The present value of the counter.
 355:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 356:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCounter(void) 
 358:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 130              		.loc 1 358 0
 131              		.cfi_startproc
 359:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Force capture by reading Accumulator */
 360:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Must first do a software capture to be able to read the counter */
 361:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 362:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 363:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 		(void)CY_GET_REG16(Left_Phase_Counter_COUNTER_LSB_PTR);
 364:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 	#else
 365:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 		(void)CY_GET_REG8(Left_Phase_Counter_COUNTER_LSB_PTR_8BIT);
 132              		.loc 1 365 0
 133 0000 024B     		ldr	r3, .L13
 134 0002 1B78     		ldrb	r3, [r3]
 366:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 	#endif/* (Left_Phase_Counter_UsingFixedFunction) */
 367:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 368:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 370:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 371:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 372:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 135              		.loc 1 372 0
 136 0004 024B     		ldr	r3, .L13+4
 137 0006 1868     		ldr	r0, [r3]
 373:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 374:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 138              		.loc 1 374 0
 139              		@ sp needed
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 10


 140 0008 7047     		bx	lr
 141              	.L14:
 142 000a C046     		.align	2
 143              	.L13:
 144 000c 04000F40 		.word	1074724868
 145 0010 10210F40 		.word	1074733328
 146              		.cfi_endproc
 147              	.LFE9:
 148              		.size	Left_Phase_Counter_ReadCounter, .-Left_Phase_Counter_ReadCounter
 149              		.section	.text.Left_Phase_Counter_ReadCapture,"ax",%progbits
 150              		.align	2
 151              		.global	Left_Phase_Counter_ReadCapture
 152              		.code	16
 153              		.thumb_func
 154              		.type	Left_Phase_Counter_ReadCapture, %function
 155              	Left_Phase_Counter_ReadCapture:
 156              	.LFB10:
 375:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 376:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 377:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 378:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCapture
 379:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 380:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 381:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   This function returns the last value captured.
 382:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 383:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 384:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 385:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 386:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 387:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint32) Present Capture value.
 388:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 389:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 390:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCapture(void) 
 391:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 157              		.loc 1 391 0
 158              		.cfi_startproc
 392:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 393:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 394:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 395:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_STATICCOUNT_LSB_PTR));
 159              		.loc 1 395 0
 160 0000 014B     		ldr	r3, .L16
 161 0002 1868     		ldr	r0, [r3]
 396:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 397:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 162              		.loc 1 397 0
 163              		@ sp needed
 164 0004 7047     		bx	lr
 165              	.L17:
 166 0006 C046     		.align	2
 167              	.L16:
 168 0008 10210F40 		.word	1074733328
 169              		.cfi_endproc
 170              	.LFE10:
 171              		.size	Left_Phase_Counter_ReadCapture, .-Left_Phase_Counter_ReadCapture
 172              		.section	.text.Left_Phase_Counter_WritePeriod,"ax",%progbits
 173              		.align	2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 11


 174              		.global	Left_Phase_Counter_WritePeriod
 175              		.code	16
 176              		.thumb_func
 177              		.type	Left_Phase_Counter_WritePeriod, %function
 178              	Left_Phase_Counter_WritePeriod:
 179              	.LFB11:
 398:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 399:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 400:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 401:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WritePeriod
 402:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 403:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 404:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Changes the period of the counter.  The new period 
 405:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * will be loaded the next time terminal count is detected.
 406:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 407:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 408:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  period: (uint32) A value of 0 will result in
 409:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *         the counter remaining at zero.  
 410:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 411:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 412:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 413:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 414:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_WritePeriod(uint32 period) 
 416:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 180              		.loc 1 416 0
 181              		.cfi_startproc
 182              	.LVL2:
 417:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 418:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_PERIOD_LSB_PTR,(uint16)period);
 419:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 420:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_PERIOD_LSB_PTR, period);
 183              		.loc 1 420 0
 184 0000 014B     		ldr	r3, .L19
 185 0002 1860     		str	r0, [r3]
 421:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 422:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 186              		.loc 1 422 0
 187              		@ sp needed
 188 0004 7047     		bx	lr
 189              	.L20:
 190 0006 C046     		.align	2
 191              	.L19:
 192 0008 90200F40 		.word	1074733200
 193              		.cfi_endproc
 194              	.LFE11:
 195              		.size	Left_Phase_Counter_WritePeriod, .-Left_Phase_Counter_WritePeriod
 196              		.section	.text.Left_Phase_Counter_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	Left_Phase_Counter_ReadPeriod
 199              		.code	16
 200              		.thumb_func
 201              		.type	Left_Phase_Counter_ReadPeriod, %function
 202              	Left_Phase_Counter_ReadPeriod:
 203              	.LFB12:
 423:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 424:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 12


 425:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 426:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadPeriod
 427:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 428:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 429:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Reads the current period value without affecting counter operation.
 430:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 431:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 432:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void:  
 433:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 434:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 435:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint32) Present period value.
 436:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 437:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 438:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadPeriod(void) 
 439:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 204              		.loc 1 439 0
 205              		.cfi_startproc
 440:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 441:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return ((uint32)CY_GET_REG16(Left_Phase_Counter_PERIOD_LSB_PTR));
 442:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 443:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         return (CY_GET_REG32(Left_Phase_Counter_PERIOD_LSB_PTR));
 206              		.loc 1 443 0
 207 0000 014B     		ldr	r3, .L22
 208 0002 1868     		ldr	r0, [r3]
 444:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 445:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 209              		.loc 1 445 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L23:
 213 0006 C046     		.align	2
 214              	.L22:
 215 0008 90200F40 		.word	1074733200
 216              		.cfi_endproc
 217              	.LFE12:
 218              		.size	Left_Phase_Counter_ReadPeriod, .-Left_Phase_Counter_ReadPeriod
 219              		.section	.text.Left_Phase_Counter_WriteCompare,"ax",%progbits
 220              		.align	2
 221              		.global	Left_Phase_Counter_WriteCompare
 222              		.code	16
 223              		.thumb_func
 224              		.type	Left_Phase_Counter_WriteCompare, %function
 225              	Left_Phase_Counter_WriteCompare:
 226              	.LFB13:
 446:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 447:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 448:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #if (!Left_Phase_Counter_UsingFixedFunction)
 449:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 450:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_WriteCompare
 451:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 452:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 453:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Changes the compare value.  The compare output will 
 454:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * driven high when the present counter value compares true based on the 
 456:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * configured compare mode setting. 
 457:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 458:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 13


 459:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Compare:  New compare value. 
 460:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 461:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 462:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 463:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 464:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_WriteCompare(uint32 compare) \
 466:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****                                    
 467:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 227              		.loc 1 467 0
 228              		.cfi_startproc
 229              	.LVL3:
 468:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #if(Left_Phase_Counter_UsingFixedFunction)
 469:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG16(Left_Phase_Counter_COMPARE_LSB_PTR, (uint16)compare);
 470:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #else
 471:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         CY_SET_REG32(Left_Phase_Counter_COMPARE_LSB_PTR, compare);
 230              		.loc 1 471 0
 231 0000 014B     		ldr	r3, .L25
 232 0002 1860     		str	r0, [r3]
 472:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     #endif /* (Left_Phase_Counter_UsingFixedFunction) */
 473:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 233              		.loc 1 473 0
 234              		@ sp needed
 235 0004 7047     		bx	lr
 236              	.L26:
 237 0006 C046     		.align	2
 238              	.L25:
 239 0008 D0200F40 		.word	1074733264
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	Left_Phase_Counter_WriteCompare, .-Left_Phase_Counter_WriteCompare
 243              		.section	.text.Left_Phase_Counter_ReadCompare,"ax",%progbits
 244              		.align	2
 245              		.global	Left_Phase_Counter_ReadCompare
 246              		.code	16
 247              		.thumb_func
 248              		.type	Left_Phase_Counter_ReadCompare, %function
 249              	Left_Phase_Counter_ReadCompare:
 250              	.LFB14:
 474:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 475:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 476:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 477:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ReadCompare
 478:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 479:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 480:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Returns the compare value.
 481:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 482:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 483:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void:
 484:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 485:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 486:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  (uint32) Present compare value.
 487:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 488:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 489:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** uint32 Left_Phase_Counter_ReadCompare(void) 
 490:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 251              		.loc 1 490 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 14


 252              		.cfi_startproc
 491:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     return (CY_GET_REG32(Left_Phase_Counter_COMPARE_LSB_PTR));
 253              		.loc 1 491 0
 254 0000 014B     		ldr	r3, .L28
 255 0002 1868     		ldr	r0, [r3]
 492:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 256              		.loc 1 492 0
 257              		@ sp needed
 258 0004 7047     		bx	lr
 259              	.L29:
 260 0006 C046     		.align	2
 261              	.L28:
 262 0008 D0200F40 		.word	1074733264
 263              		.cfi_endproc
 264              	.LFE14:
 265              		.size	Left_Phase_Counter_ReadCompare, .-Left_Phase_Counter_ReadCompare
 266              		.section	.text.Left_Phase_Counter_ClearFIFO,"ax",%progbits
 267              		.align	2
 268              		.global	Left_Phase_Counter_ClearFIFO
 269              		.code	16
 270              		.thumb_func
 271              		.type	Left_Phase_Counter_ClearFIFO, %function
 272              	Left_Phase_Counter_ClearFIFO:
 273              	.LFB15:
 493:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 494:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 495:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #if (Left_Phase_Counter_COMPARE_MODE_SOFTWARE)
 496:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetCompareMode
 498:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 499:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 500:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Sets the software controlled Compare Mode.
 501:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 502:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:
 503:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 505:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return:
 506:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 507:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 508:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 509:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_SetCompareMode(uint8 compareMode) 
 510:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 511:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Clear the compare mode bits in the control register */
 512:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_CMPMODE_MASK));
 513:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 514:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Write the new setting */
 515:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL |= compareMode;
 516:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 517:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #endif  /* (Left_Phase_Counter_COMPARE_MODE_SOFTWARE) */
 518:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 519:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 520:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #if (Left_Phase_Counter_CAPTURE_MODE_SOFTWARE)
 521:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 522:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_SetCaptureMode
 523:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 524:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 525:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  Sets the software controlled Capture Mode.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 15


 526:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 527:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:
 528:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 530:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return:
 531:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void
 532:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 533:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 534:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_SetCaptureMode(uint8 captureMode) 
 535:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 536:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Clear the capture mode bits in the control register */
 537:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL &= ((uint8)(~Left_Phase_Counter_CTRL_CAPMODE_MASK));
 538:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     
 539:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     /* Write the new setting */
 540:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     Left_Phase_Counter_CONTROL |= ((uint8)((uint8)captureMode << Left_Phase_Counter_CTRL_CAPMODE0_S
 541:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 542:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** #endif  /* (Left_Phase_Counter_CAPTURE_MODE_SOFTWARE) */
 543:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 544:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 545:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** /*******************************************************************************
 546:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Function Name: Left_Phase_Counter_ClearFIFO
 547:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** ********************************************************************************
 548:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Summary:
 549:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *   This function clears all capture data from the capture FIFO
 550:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 551:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Parameters:  
 552:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  void:
 553:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 554:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** * Return: 
 555:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *  None
 556:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *
 557:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** void Left_Phase_Counter_ClearFIFO(void) 
 559:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** {
 274              		.loc 1 559 0
 275              		.cfi_startproc
 276 0000 08B5     		push	{r3, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 3, -8
 279              		.cfi_offset 14, -4
 560:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 561:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     while(0u != (Left_Phase_Counter_ReadStatusRegister() & Left_Phase_Counter_STATUS_FIFONEMP))
 280              		.loc 1 561 0
 281 0002 01E0     		b	.L31
 282              	.L32:
 562:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     {
 563:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         (void)Left_Phase_Counter_ReadCapture();
 283              		.loc 1 563 0
 284 0004 FFF7FEFF 		bl	Left_Phase_Counter_ReadCapture
 285              	.LVL4:
 286              	.L31:
 561:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     {
 287              		.loc 1 561 0
 288 0008 FFF7FEFF 		bl	Left_Phase_Counter_ReadStatusRegister
 289              	.LVL5:
 290 000c 4306     		lsl	r3, r0, #25
 291 000e F9D4     		bmi	.L32
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 16


 564:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     }
 565:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 566:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** }
 292              		.loc 1 566 0
 293              		@ sp needed
 294 0010 08BD     		pop	{r3, pc}
 295              		.cfi_endproc
 296              	.LFE15:
 297              		.size	Left_Phase_Counter_ClearFIFO, .-Left_Phase_Counter_ClearFIFO
 298 0012 C046     		.section	.text.Left_Phase_Counter_Init,"ax",%progbits
 299              		.align	2
 300              		.global	Left_Phase_Counter_Init
 301              		.code	16
 302              		.thumb_func
 303              		.type	Left_Phase_Counter_Init, %function
 304              	Left_Phase_Counter_Init:
 305              	.LFB2:
  38:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!Left_Phase_Counter_UsingFixedFunction && !Left_Phase_Counter_ControlRegRemoved)
 306              		.loc 1 38 0
 307              		.cfi_startproc
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!Left_Phase_Counter_UsingFixedFunction) */
 312              		.loc 1 96 0
 313 0002 FFF7FEFF 		bl	Left_Phase_Counter_ClearFIFO
 314              	.LVL6:
 100:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #if (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A)))
 315              		.loc 1 100 0
 316 0006 0224     		mov	r4, #2
 317 0008 6442     		neg	r4, r4
 318 000a 201C     		mov	r0, r4
 319 000c FFF7FEFF 		bl	Left_Phase_Counter_WritePeriod
 320              	.LVL7:
 102:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         #endif /* (!(Left_Phase_Counter_UsingFixedFunction && (CY_PSOC5A))) */
 321              		.loc 1 102 0
 322 0010 201C     		mov	r0, r4
 323 0012 FFF7FEFF 		bl	Left_Phase_Counter_WriteCounter
 324              	.LVL8:
 104:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
 325              		.loc 1 104 0
 326 0016 0C20     		mov	r0, #12
 327 0018 FFF7FEFF 		bl	Left_Phase_Counter_SetInterruptMode
 328              	.LVL9:
 108:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Set the compare value (only available to non-fixed function implementation */
 329              		.loc 1 108 0
 330 001c FFF7FEFF 		bl	Left_Phase_Counter_ReadStatusRegister
 331              	.LVL10:
 110:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             /* Use the interrupt output of the status register for IRQ output */
 332              		.loc 1 110 0
 333 0020 0120     		mov	r0, #1
 334 0022 4042     		neg	r0, r0
 335 0024 FFF7FEFF 		bl	Left_Phase_Counter_WriteCompare
 336              	.LVL11:
 115:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 337              		.loc 1 115 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 17


 338 0028 FFF7FEFF 		bl	CyEnterCriticalSection
 339              	.LVL12:
 117:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 340              		.loc 1 117 0
 341 002c 034A     		ldr	r2, .L34
 342 002e 1178     		ldrb	r1, [r2]
 343 0030 1023     		mov	r3, #16
 344 0032 0B43     		orr	r3, r1
 345 0034 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****             
 346              		.loc 1 120 0
 347 0036 FFF7FEFF 		bl	CyExitCriticalSection
 348              	.LVL13:
 123:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 349              		.loc 1 123 0
 350              		@ sp needed
 351 003a 10BD     		pop	{r4, pc}
 352              	.L35:
 353              		.align	2
 354              	.L34:
 355 003c 97000F40 		.word	1074725015
 356              		.cfi_endproc
 357              	.LFE2:
 358              		.size	Left_Phase_Counter_Init, .-Left_Phase_Counter_Init
 359              		.section	.text.Left_Phase_Counter_Start,"ax",%progbits
 360              		.align	2
 361              		.global	Left_Phase_Counter_Start
 362              		.code	16
 363              		.thumb_func
 364              		.type	Left_Phase_Counter_Start, %function
 365              	Left_Phase_Counter_Start:
 366              	.LFB4:
 179:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     if(Left_Phase_Counter_initVar == 0u)
 367              		.loc 1 179 0
 368              		.cfi_startproc
 369 0000 08B5     		push	{r3, lr}
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 180:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     {
 373              		.loc 1 180 0
 374 0002 054B     		ldr	r3, .L38
 375 0004 1B78     		ldrb	r3, [r3]
 376 0006 002B     		cmp	r3, #0
 377 0008 04D1     		bne	.L36
 182:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****         
 378              		.loc 1 182 0
 379 000a FFF7FEFF 		bl	Left_Phase_Counter_Init
 380              	.LVL14:
 184:.\Generated_Source\PSoC4/Left_Phase_Counter.c ****     }
 381              		.loc 1 184 0
 382 000e 0122     		mov	r2, #1
 383 0010 014B     		ldr	r3, .L38
 384 0012 1A70     		strb	r2, [r3]
 385              	.L36:
 189:.\Generated_Source\PSoC4/Left_Phase_Counter.c **** 
 386              		.loc 1 189 0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 18


 387              		@ sp needed
 388 0014 08BD     		pop	{r3, pc}
 389              	.L39:
 390 0016 C046     		.align	2
 391              	.L38:
 392 0018 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE4:
 395              		.size	Left_Phase_Counter_Start, .-Left_Phase_Counter_Start
 396              		.global	Left_Phase_Counter_initVar
 397              		.bss
 398              		.set	.LANCHOR0,. + 0
 399              		.type	Left_Phase_Counter_initVar, %object
 400              		.size	Left_Phase_Counter_initVar, 1
 401              	Left_Phase_Counter_initVar:
 402 0000 00       		.space	1
 403              		.text
 404              	.Letext0:
 405              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 406              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 407              		.section	.debug_info,"",%progbits
 408              	.Ldebug_info0:
 409 0000 E9020000 		.4byte	0x2e9
 410 0004 0400     		.2byte	0x4
 411 0006 00000000 		.4byte	.Ldebug_abbrev0
 412 000a 04       		.byte	0x4
 413 000b 01       		.uleb128 0x1
 414 000c CE020000 		.4byte	.LASF35
 415 0010 01       		.byte	0x1
 416 0011 94010000 		.4byte	.LASF36
 417 0015 66030000 		.4byte	.LASF37
 418 0019 00000000 		.4byte	.Ldebug_ranges0+0
 419 001d 00000000 		.4byte	0
 420 0021 00000000 		.4byte	.Ldebug_line0
 421 0025 02       		.uleb128 0x2
 422 0026 01       		.byte	0x1
 423 0027 06       		.byte	0x6
 424 0028 D6030000 		.4byte	.LASF0
 425 002c 02       		.uleb128 0x2
 426 002d 01       		.byte	0x1
 427 002e 08       		.byte	0x8
 428 002f 20010000 		.4byte	.LASF1
 429 0033 02       		.uleb128 0x2
 430 0034 02       		.byte	0x2
 431 0035 05       		.byte	0x5
 432 0036 5C030000 		.4byte	.LASF2
 433 003a 02       		.uleb128 0x2
 434 003b 02       		.byte	0x2
 435 003c 07       		.byte	0x7
 436 003d A2000000 		.4byte	.LASF3
 437 0041 02       		.uleb128 0x2
 438 0042 04       		.byte	0x4
 439 0043 05       		.byte	0x5
 440 0044 CD030000 		.4byte	.LASF4
 441 0048 02       		.uleb128 0x2
 442 0049 04       		.byte	0x4
 443 004a 07       		.byte	0x7
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 19


 444 004b 52010000 		.4byte	.LASF5
 445 004f 02       		.uleb128 0x2
 446 0050 08       		.byte	0x8
 447 0051 05       		.byte	0x5
 448 0052 81020000 		.4byte	.LASF6
 449 0056 02       		.uleb128 0x2
 450 0057 08       		.byte	0x8
 451 0058 07       		.byte	0x7
 452 0059 09010000 		.4byte	.LASF7
 453 005d 03       		.uleb128 0x3
 454 005e 04       		.byte	0x4
 455 005f 05       		.byte	0x5
 456 0060 696E7400 		.ascii	"int\000"
 457 0064 02       		.uleb128 0x2
 458 0065 04       		.byte	0x4
 459 0066 07       		.byte	0x7
 460 0067 B5000000 		.4byte	.LASF8
 461 006b 04       		.uleb128 0x4
 462 006c 64010000 		.4byte	.LASF9
 463 0070 02       		.byte	0x2
 464 0071 3801     		.2byte	0x138
 465 0073 2C000000 		.4byte	0x2c
 466 0077 04       		.uleb128 0x4
 467 0078 E8010000 		.4byte	.LASF10
 468 007c 02       		.byte	0x2
 469 007d 3A01     		.2byte	0x13a
 470 007f 48000000 		.4byte	0x48
 471 0083 02       		.uleb128 0x2
 472 0084 04       		.byte	0x4
 473 0085 04       		.byte	0x4
 474 0086 FB000000 		.4byte	.LASF11
 475 008a 02       		.uleb128 0x2
 476 008b 08       		.byte	0x8
 477 008c 04       		.byte	0x4
 478 008d C2010000 		.4byte	.LASF12
 479 0091 02       		.uleb128 0x2
 480 0092 01       		.byte	0x1
 481 0093 08       		.byte	0x8
 482 0094 B1020000 		.4byte	.LASF13
 483 0098 04       		.uleb128 0x4
 484 0099 4D010000 		.4byte	.LASF14
 485 009d 02       		.byte	0x2
 486 009e E201     		.2byte	0x1e2
 487 00a0 A4000000 		.4byte	0xa4
 488 00a4 05       		.uleb128 0x5
 489 00a5 6B000000 		.4byte	0x6b
 490 00a9 04       		.uleb128 0x4
 491 00aa 1A000000 		.4byte	.LASF15
 492 00ae 02       		.byte	0x2
 493 00af E401     		.2byte	0x1e4
 494 00b1 B5000000 		.4byte	0xb5
 495 00b5 05       		.uleb128 0x5
 496 00b6 77000000 		.4byte	0x77
 497 00ba 02       		.uleb128 0x2
 498 00bb 04       		.byte	0x4
 499 00bc 07       		.byte	0x7
 500 00bd 78020000 		.4byte	.LASF16
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 20


 501 00c1 06       		.uleb128 0x6
 502 00c2 00000000 		.4byte	.LASF17
 503 00c6 01       		.byte	0x1
 504 00c7 8F       		.byte	0x8f
 505 00c8 00000000 		.4byte	.LFB3
 506 00cc 02000000 		.4byte	.LFE3-.LFB3
 507 00d0 01       		.uleb128 0x1
 508 00d1 9C       		.byte	0x9c
 509 00d2 06       		.uleb128 0x6
 510 00d3 83000000 		.4byte	.LASF18
 511 00d7 01       		.byte	0x1
 512 00d8 D0       		.byte	0xd0
 513 00d9 00000000 		.4byte	.LFB5
 514 00dd 02000000 		.4byte	.LFE5-.LFB5
 515 00e1 01       		.uleb128 0x1
 516 00e2 9C       		.byte	0x9c
 517 00e3 07       		.uleb128 0x7
 518 00e4 A9030000 		.4byte	.LASF19
 519 00e8 01       		.byte	0x1
 520 00e9 ED       		.byte	0xed
 521 00ea 00000000 		.4byte	.LFB6
 522 00ee 0C000000 		.4byte	.LFE6-.LFB6
 523 00f2 01       		.uleb128 0x1
 524 00f3 9C       		.byte	0x9c
 525 00f4 06010000 		.4byte	0x106
 526 00f8 08       		.uleb128 0x8
 527 00f9 6A010000 		.4byte	.LASF21
 528 00fd 01       		.byte	0x1
 529 00fe ED       		.byte	0xed
 530 00ff 6B000000 		.4byte	0x6b
 531 0103 01       		.uleb128 0x1
 532 0104 50       		.byte	0x50
 533 0105 00       		.byte	0
 534 0106 09       		.uleb128 0x9
 535 0107 3F000000 		.4byte	.LASF23
 536 010b 01       		.byte	0x1
 537 010c 0501     		.2byte	0x105
 538 010e 6B000000 		.4byte	0x6b
 539 0112 00000000 		.4byte	.LFB7
 540 0116 0C000000 		.4byte	.LFE7-.LFB7
 541 011a 01       		.uleb128 0x1
 542 011b 9C       		.byte	0x9c
 543 011c 0A       		.uleb128 0xa
 544 011d 06020000 		.4byte	.LASF20
 545 0121 01       		.byte	0x1
 546 0122 4601     		.2byte	0x146
 547 0124 00000000 		.4byte	.LFB8
 548 0128 0C000000 		.4byte	.LFE8-.LFB8
 549 012c 01       		.uleb128 0x1
 550 012d 9C       		.byte	0x9c
 551 012e 41010000 		.4byte	0x141
 552 0132 0B       		.uleb128 0xb
 553 0133 01010000 		.4byte	.LASF22
 554 0137 01       		.byte	0x1
 555 0138 4601     		.2byte	0x146
 556 013a 77000000 		.4byte	0x77
 557 013e 01       		.uleb128 0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 21


 558 013f 50       		.byte	0x50
 559 0140 00       		.byte	0
 560 0141 09       		.uleb128 0x9
 561 0142 2E010000 		.4byte	.LASF24
 562 0146 01       		.byte	0x1
 563 0147 6501     		.2byte	0x165
 564 0149 77000000 		.4byte	0x77
 565 014d 00000000 		.4byte	.LFB9
 566 0151 14000000 		.4byte	.LFE9-.LFB9
 567 0155 01       		.uleb128 0x1
 568 0156 9C       		.byte	0x9c
 569 0157 09       		.uleb128 0x9
 570 0158 26020000 		.4byte	.LASF25
 571 015c 01       		.byte	0x1
 572 015d 8601     		.2byte	0x186
 573 015f 77000000 		.4byte	0x77
 574 0163 00000000 		.4byte	.LFB10
 575 0167 0C000000 		.4byte	.LFE10-.LFB10
 576 016b 01       		.uleb128 0x1
 577 016c 9C       		.byte	0x9c
 578 016d 0A       		.uleb128 0xa
 579 016e 20000000 		.4byte	.LASF26
 580 0172 01       		.byte	0x1
 581 0173 9F01     		.2byte	0x19f
 582 0175 00000000 		.4byte	.LFB11
 583 0179 0C000000 		.4byte	.LFE11-.LFB11
 584 017d 01       		.uleb128 0x1
 585 017e 9C       		.byte	0x9c
 586 017f 92010000 		.4byte	0x192
 587 0183 0B       		.uleb128 0xb
 588 0184 9B000000 		.4byte	.LASF27
 589 0188 01       		.byte	0x1
 590 0189 9F01     		.2byte	0x19f
 591 018b 77000000 		.4byte	0x77
 592 018f 01       		.uleb128 0x1
 593 0190 50       		.byte	0x50
 594 0191 00       		.byte	0
 595 0192 09       		.uleb128 0x9
 596 0193 65000000 		.4byte	.LASF28
 597 0197 01       		.byte	0x1
 598 0198 B601     		.2byte	0x1b6
 599 019a 77000000 		.4byte	0x77
 600 019e 00000000 		.4byte	.LFB12
 601 01a2 0C000000 		.4byte	.LFE12-.LFB12
 602 01a6 01       		.uleb128 0x1
 603 01a7 9C       		.byte	0x9c
 604 01a8 0A       		.uleb128 0xa
 605 01a9 C2000000 		.4byte	.LASF29
 606 01ad 01       		.byte	0x1
 607 01ae D101     		.2byte	0x1d1
 608 01b0 00000000 		.4byte	.LFB13
 609 01b4 0C000000 		.4byte	.LFE13-.LFB13
 610 01b8 01       		.uleb128 0x1
 611 01b9 9C       		.byte	0x9c
 612 01ba CD010000 		.4byte	0x1cd
 613 01be 0B       		.uleb128 0xb
 614 01bf E2030000 		.4byte	.LASF30
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 22


 615 01c3 01       		.byte	0x1
 616 01c4 D101     		.2byte	0x1d1
 617 01c6 77000000 		.4byte	0x77
 618 01ca 01       		.uleb128 0x1
 619 01cb 50       		.byte	0x50
 620 01cc 00       		.byte	0
 621 01cd 09       		.uleb128 0x9
 622 01ce C9010000 		.4byte	.LASF31
 623 01d2 01       		.byte	0x1
 624 01d3 E901     		.2byte	0x1e9
 625 01d5 77000000 		.4byte	0x77
 626 01d9 00000000 		.4byte	.LFB14
 627 01dd 0C000000 		.4byte	.LFE14-.LFB14
 628 01e1 01       		.uleb128 0x1
 629 01e2 9C       		.byte	0x9c
 630 01e3 0A       		.uleb128 0xa
 631 01e4 5B020000 		.4byte	.LASF32
 632 01e8 01       		.byte	0x1
 633 01e9 2E02     		.2byte	0x22e
 634 01eb 00000000 		.4byte	.LFB15
 635 01ef 12000000 		.4byte	.LFE15-.LFB15
 636 01f3 01       		.uleb128 0x1
 637 01f4 9C       		.byte	0x9c
 638 01f5 0C020000 		.4byte	0x20c
 639 01f9 0C       		.uleb128 0xc
 640 01fa 08000000 		.4byte	.LVL4
 641 01fe 57010000 		.4byte	0x157
 642 0202 0C       		.uleb128 0xc
 643 0203 0C000000 		.4byte	.LVL5
 644 0207 06010000 		.4byte	0x106
 645 020b 00       		.byte	0
 646 020c 07       		.uleb128 0x7
 647 020d B6020000 		.4byte	.LASF33
 648 0211 01       		.byte	0x1
 649 0212 25       		.byte	0x25
 650 0213 00000000 		.4byte	.LFB2
 651 0217 40000000 		.4byte	.LFE2-.LFB2
 652 021b 01       		.uleb128 0x1
 653 021c 9C       		.byte	0x9c
 654 021d A4020000 		.4byte	0x2a4
 655 0221 0D       		.uleb128 0xd
 656 0222 8F020000 		.4byte	.LASF38
 657 0226 01       		.byte	0x1
 658 0227 2D       		.byte	0x2d
 659 0228 6B000000 		.4byte	0x6b
 660 022c 00000000 		.4byte	.LLST0
 661 0230 0C       		.uleb128 0xc
 662 0231 06000000 		.4byte	.LVL6
 663 0235 E3010000 		.4byte	0x1e3
 664 0239 0E       		.uleb128 0xe
 665 023a 10000000 		.4byte	.LVL7
 666 023e 6D010000 		.4byte	0x16d
 667 0242 4D020000 		.4byte	0x24d
 668 0246 0F       		.uleb128 0xf
 669 0247 01       		.uleb128 0x1
 670 0248 50       		.byte	0x50
 671 0249 02       		.uleb128 0x2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 23


 672 024a 74       		.byte	0x74
 673 024b 00       		.sleb128 0
 674 024c 00       		.byte	0
 675 024d 0E       		.uleb128 0xe
 676 024e 16000000 		.4byte	.LVL8
 677 0252 1C010000 		.4byte	0x11c
 678 0256 61020000 		.4byte	0x261
 679 025a 0F       		.uleb128 0xf
 680 025b 01       		.uleb128 0x1
 681 025c 50       		.byte	0x50
 682 025d 02       		.uleb128 0x2
 683 025e 74       		.byte	0x74
 684 025f 00       		.sleb128 0
 685 0260 00       		.byte	0
 686 0261 0E       		.uleb128 0xe
 687 0262 1C000000 		.4byte	.LVL9
 688 0266 E3000000 		.4byte	0xe3
 689 026a 74020000 		.4byte	0x274
 690 026e 0F       		.uleb128 0xf
 691 026f 01       		.uleb128 0x1
 692 0270 50       		.byte	0x50
 693 0271 01       		.uleb128 0x1
 694 0272 3C       		.byte	0x3c
 695 0273 00       		.byte	0
 696 0274 0C       		.uleb128 0xc
 697 0275 20000000 		.4byte	.LVL10
 698 0279 06010000 		.4byte	0x106
 699 027d 0E       		.uleb128 0xe
 700 027e 28000000 		.4byte	.LVL11
 701 0282 A8010000 		.4byte	0x1a8
 702 0286 91020000 		.4byte	0x291
 703 028a 0F       		.uleb128 0xf
 704 028b 01       		.uleb128 0x1
 705 028c 50       		.byte	0x50
 706 028d 02       		.uleb128 0x2
 707 028e 09       		.byte	0x9
 708 028f FF       		.byte	0xff
 709 0290 00       		.byte	0
 710 0291 0C       		.uleb128 0xc
 711 0292 2C000000 		.4byte	.LVL12
 712 0296 D4020000 		.4byte	0x2d4
 713 029a 0C       		.uleb128 0xc
 714 029b 3A000000 		.4byte	.LVL13
 715 029f DF020000 		.4byte	0x2df
 716 02a3 00       		.byte	0
 717 02a4 07       		.uleb128 0x7
 718 02a5 E2000000 		.4byte	.LASF34
 719 02a9 01       		.byte	0x1
 720 02aa B2       		.byte	0xb2
 721 02ab 00000000 		.4byte	.LFB4
 722 02af 1C000000 		.4byte	.LFE4-.LFB4
 723 02b3 01       		.uleb128 0x1
 724 02b4 9C       		.byte	0x9c
 725 02b5 C3020000 		.4byte	0x2c3
 726 02b9 0C       		.uleb128 0xc
 727 02ba 0E000000 		.4byte	.LVL14
 728 02be 0C020000 		.4byte	0x20c
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 24


 729 02c2 00       		.byte	0
 730 02c3 10       		.uleb128 0x10
 731 02c4 79010000 		.4byte	.LASF39
 732 02c8 01       		.byte	0x1
 733 02c9 15       		.byte	0x15
 734 02ca 6B000000 		.4byte	0x6b
 735 02ce 05       		.uleb128 0x5
 736 02cf 03       		.byte	0x3
 737 02d0 00000000 		.4byte	Left_Phase_Counter_initVar
 738 02d4 11       		.uleb128 0x11
 739 02d5 EF010000 		.4byte	.LASF40
 740 02d9 03       		.byte	0x3
 741 02da 61       		.byte	0x61
 742 02db 6B000000 		.4byte	0x6b
 743 02df 12       		.uleb128 0x12
 744 02e0 45020000 		.4byte	.LASF41
 745 02e4 03       		.byte	0x3
 746 02e5 62       		.byte	0x62
 747 02e6 13       		.uleb128 0x13
 748 02e7 6B000000 		.4byte	0x6b
 749 02eb 00       		.byte	0
 750 02ec 00       		.byte	0
 751              		.section	.debug_abbrev,"",%progbits
 752              	.Ldebug_abbrev0:
 753 0000 01       		.uleb128 0x1
 754 0001 11       		.uleb128 0x11
 755 0002 01       		.byte	0x1
 756 0003 25       		.uleb128 0x25
 757 0004 0E       		.uleb128 0xe
 758 0005 13       		.uleb128 0x13
 759 0006 0B       		.uleb128 0xb
 760 0007 03       		.uleb128 0x3
 761 0008 0E       		.uleb128 0xe
 762 0009 1B       		.uleb128 0x1b
 763 000a 0E       		.uleb128 0xe
 764 000b 55       		.uleb128 0x55
 765 000c 17       		.uleb128 0x17
 766 000d 11       		.uleb128 0x11
 767 000e 01       		.uleb128 0x1
 768 000f 10       		.uleb128 0x10
 769 0010 17       		.uleb128 0x17
 770 0011 00       		.byte	0
 771 0012 00       		.byte	0
 772 0013 02       		.uleb128 0x2
 773 0014 24       		.uleb128 0x24
 774 0015 00       		.byte	0
 775 0016 0B       		.uleb128 0xb
 776 0017 0B       		.uleb128 0xb
 777 0018 3E       		.uleb128 0x3e
 778 0019 0B       		.uleb128 0xb
 779 001a 03       		.uleb128 0x3
 780 001b 0E       		.uleb128 0xe
 781 001c 00       		.byte	0
 782 001d 00       		.byte	0
 783 001e 03       		.uleb128 0x3
 784 001f 24       		.uleb128 0x24
 785 0020 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 25


 786 0021 0B       		.uleb128 0xb
 787 0022 0B       		.uleb128 0xb
 788 0023 3E       		.uleb128 0x3e
 789 0024 0B       		.uleb128 0xb
 790 0025 03       		.uleb128 0x3
 791 0026 08       		.uleb128 0x8
 792 0027 00       		.byte	0
 793 0028 00       		.byte	0
 794 0029 04       		.uleb128 0x4
 795 002a 16       		.uleb128 0x16
 796 002b 00       		.byte	0
 797 002c 03       		.uleb128 0x3
 798 002d 0E       		.uleb128 0xe
 799 002e 3A       		.uleb128 0x3a
 800 002f 0B       		.uleb128 0xb
 801 0030 3B       		.uleb128 0x3b
 802 0031 05       		.uleb128 0x5
 803 0032 49       		.uleb128 0x49
 804 0033 13       		.uleb128 0x13
 805 0034 00       		.byte	0
 806 0035 00       		.byte	0
 807 0036 05       		.uleb128 0x5
 808 0037 35       		.uleb128 0x35
 809 0038 00       		.byte	0
 810 0039 49       		.uleb128 0x49
 811 003a 13       		.uleb128 0x13
 812 003b 00       		.byte	0
 813 003c 00       		.byte	0
 814 003d 06       		.uleb128 0x6
 815 003e 2E       		.uleb128 0x2e
 816 003f 00       		.byte	0
 817 0040 3F       		.uleb128 0x3f
 818 0041 19       		.uleb128 0x19
 819 0042 03       		.uleb128 0x3
 820 0043 0E       		.uleb128 0xe
 821 0044 3A       		.uleb128 0x3a
 822 0045 0B       		.uleb128 0xb
 823 0046 3B       		.uleb128 0x3b
 824 0047 0B       		.uleb128 0xb
 825 0048 27       		.uleb128 0x27
 826 0049 19       		.uleb128 0x19
 827 004a 11       		.uleb128 0x11
 828 004b 01       		.uleb128 0x1
 829 004c 12       		.uleb128 0x12
 830 004d 06       		.uleb128 0x6
 831 004e 40       		.uleb128 0x40
 832 004f 18       		.uleb128 0x18
 833 0050 9742     		.uleb128 0x2117
 834 0052 19       		.uleb128 0x19
 835 0053 00       		.byte	0
 836 0054 00       		.byte	0
 837 0055 07       		.uleb128 0x7
 838 0056 2E       		.uleb128 0x2e
 839 0057 01       		.byte	0x1
 840 0058 3F       		.uleb128 0x3f
 841 0059 19       		.uleb128 0x19
 842 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 26


 843 005b 0E       		.uleb128 0xe
 844 005c 3A       		.uleb128 0x3a
 845 005d 0B       		.uleb128 0xb
 846 005e 3B       		.uleb128 0x3b
 847 005f 0B       		.uleb128 0xb
 848 0060 27       		.uleb128 0x27
 849 0061 19       		.uleb128 0x19
 850 0062 11       		.uleb128 0x11
 851 0063 01       		.uleb128 0x1
 852 0064 12       		.uleb128 0x12
 853 0065 06       		.uleb128 0x6
 854 0066 40       		.uleb128 0x40
 855 0067 18       		.uleb128 0x18
 856 0068 9742     		.uleb128 0x2117
 857 006a 19       		.uleb128 0x19
 858 006b 01       		.uleb128 0x1
 859 006c 13       		.uleb128 0x13
 860 006d 00       		.byte	0
 861 006e 00       		.byte	0
 862 006f 08       		.uleb128 0x8
 863 0070 05       		.uleb128 0x5
 864 0071 00       		.byte	0
 865 0072 03       		.uleb128 0x3
 866 0073 0E       		.uleb128 0xe
 867 0074 3A       		.uleb128 0x3a
 868 0075 0B       		.uleb128 0xb
 869 0076 3B       		.uleb128 0x3b
 870 0077 0B       		.uleb128 0xb
 871 0078 49       		.uleb128 0x49
 872 0079 13       		.uleb128 0x13
 873 007a 02       		.uleb128 0x2
 874 007b 18       		.uleb128 0x18
 875 007c 00       		.byte	0
 876 007d 00       		.byte	0
 877 007e 09       		.uleb128 0x9
 878 007f 2E       		.uleb128 0x2e
 879 0080 00       		.byte	0
 880 0081 3F       		.uleb128 0x3f
 881 0082 19       		.uleb128 0x19
 882 0083 03       		.uleb128 0x3
 883 0084 0E       		.uleb128 0xe
 884 0085 3A       		.uleb128 0x3a
 885 0086 0B       		.uleb128 0xb
 886 0087 3B       		.uleb128 0x3b
 887 0088 05       		.uleb128 0x5
 888 0089 27       		.uleb128 0x27
 889 008a 19       		.uleb128 0x19
 890 008b 49       		.uleb128 0x49
 891 008c 13       		.uleb128 0x13
 892 008d 11       		.uleb128 0x11
 893 008e 01       		.uleb128 0x1
 894 008f 12       		.uleb128 0x12
 895 0090 06       		.uleb128 0x6
 896 0091 40       		.uleb128 0x40
 897 0092 18       		.uleb128 0x18
 898 0093 9742     		.uleb128 0x2117
 899 0095 19       		.uleb128 0x19
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 27


 900 0096 00       		.byte	0
 901 0097 00       		.byte	0
 902 0098 0A       		.uleb128 0xa
 903 0099 2E       		.uleb128 0x2e
 904 009a 01       		.byte	0x1
 905 009b 3F       		.uleb128 0x3f
 906 009c 19       		.uleb128 0x19
 907 009d 03       		.uleb128 0x3
 908 009e 0E       		.uleb128 0xe
 909 009f 3A       		.uleb128 0x3a
 910 00a0 0B       		.uleb128 0xb
 911 00a1 3B       		.uleb128 0x3b
 912 00a2 05       		.uleb128 0x5
 913 00a3 27       		.uleb128 0x27
 914 00a4 19       		.uleb128 0x19
 915 00a5 11       		.uleb128 0x11
 916 00a6 01       		.uleb128 0x1
 917 00a7 12       		.uleb128 0x12
 918 00a8 06       		.uleb128 0x6
 919 00a9 40       		.uleb128 0x40
 920 00aa 18       		.uleb128 0x18
 921 00ab 9742     		.uleb128 0x2117
 922 00ad 19       		.uleb128 0x19
 923 00ae 01       		.uleb128 0x1
 924 00af 13       		.uleb128 0x13
 925 00b0 00       		.byte	0
 926 00b1 00       		.byte	0
 927 00b2 0B       		.uleb128 0xb
 928 00b3 05       		.uleb128 0x5
 929 00b4 00       		.byte	0
 930 00b5 03       		.uleb128 0x3
 931 00b6 0E       		.uleb128 0xe
 932 00b7 3A       		.uleb128 0x3a
 933 00b8 0B       		.uleb128 0xb
 934 00b9 3B       		.uleb128 0x3b
 935 00ba 05       		.uleb128 0x5
 936 00bb 49       		.uleb128 0x49
 937 00bc 13       		.uleb128 0x13
 938 00bd 02       		.uleb128 0x2
 939 00be 18       		.uleb128 0x18
 940 00bf 00       		.byte	0
 941 00c0 00       		.byte	0
 942 00c1 0C       		.uleb128 0xc
 943 00c2 898201   		.uleb128 0x4109
 944 00c5 00       		.byte	0
 945 00c6 11       		.uleb128 0x11
 946 00c7 01       		.uleb128 0x1
 947 00c8 31       		.uleb128 0x31
 948 00c9 13       		.uleb128 0x13
 949 00ca 00       		.byte	0
 950 00cb 00       		.byte	0
 951 00cc 0D       		.uleb128 0xd
 952 00cd 34       		.uleb128 0x34
 953 00ce 00       		.byte	0
 954 00cf 03       		.uleb128 0x3
 955 00d0 0E       		.uleb128 0xe
 956 00d1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 28


 957 00d2 0B       		.uleb128 0xb
 958 00d3 3B       		.uleb128 0x3b
 959 00d4 0B       		.uleb128 0xb
 960 00d5 49       		.uleb128 0x49
 961 00d6 13       		.uleb128 0x13
 962 00d7 02       		.uleb128 0x2
 963 00d8 17       		.uleb128 0x17
 964 00d9 00       		.byte	0
 965 00da 00       		.byte	0
 966 00db 0E       		.uleb128 0xe
 967 00dc 898201   		.uleb128 0x4109
 968 00df 01       		.byte	0x1
 969 00e0 11       		.uleb128 0x11
 970 00e1 01       		.uleb128 0x1
 971 00e2 31       		.uleb128 0x31
 972 00e3 13       		.uleb128 0x13
 973 00e4 01       		.uleb128 0x1
 974 00e5 13       		.uleb128 0x13
 975 00e6 00       		.byte	0
 976 00e7 00       		.byte	0
 977 00e8 0F       		.uleb128 0xf
 978 00e9 8A8201   		.uleb128 0x410a
 979 00ec 00       		.byte	0
 980 00ed 02       		.uleb128 0x2
 981 00ee 18       		.uleb128 0x18
 982 00ef 9142     		.uleb128 0x2111
 983 00f1 18       		.uleb128 0x18
 984 00f2 00       		.byte	0
 985 00f3 00       		.byte	0
 986 00f4 10       		.uleb128 0x10
 987 00f5 34       		.uleb128 0x34
 988 00f6 00       		.byte	0
 989 00f7 03       		.uleb128 0x3
 990 00f8 0E       		.uleb128 0xe
 991 00f9 3A       		.uleb128 0x3a
 992 00fa 0B       		.uleb128 0xb
 993 00fb 3B       		.uleb128 0x3b
 994 00fc 0B       		.uleb128 0xb
 995 00fd 49       		.uleb128 0x49
 996 00fe 13       		.uleb128 0x13
 997 00ff 3F       		.uleb128 0x3f
 998 0100 19       		.uleb128 0x19
 999 0101 02       		.uleb128 0x2
 1000 0102 18       		.uleb128 0x18
 1001 0103 00       		.byte	0
 1002 0104 00       		.byte	0
 1003 0105 11       		.uleb128 0x11
 1004 0106 2E       		.uleb128 0x2e
 1005 0107 00       		.byte	0
 1006 0108 3F       		.uleb128 0x3f
 1007 0109 19       		.uleb128 0x19
 1008 010a 03       		.uleb128 0x3
 1009 010b 0E       		.uleb128 0xe
 1010 010c 3A       		.uleb128 0x3a
 1011 010d 0B       		.uleb128 0xb
 1012 010e 3B       		.uleb128 0x3b
 1013 010f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 29


 1014 0110 27       		.uleb128 0x27
 1015 0111 19       		.uleb128 0x19
 1016 0112 49       		.uleb128 0x49
 1017 0113 13       		.uleb128 0x13
 1018 0114 3C       		.uleb128 0x3c
 1019 0115 19       		.uleb128 0x19
 1020 0116 00       		.byte	0
 1021 0117 00       		.byte	0
 1022 0118 12       		.uleb128 0x12
 1023 0119 2E       		.uleb128 0x2e
 1024 011a 01       		.byte	0x1
 1025 011b 3F       		.uleb128 0x3f
 1026 011c 19       		.uleb128 0x19
 1027 011d 03       		.uleb128 0x3
 1028 011e 0E       		.uleb128 0xe
 1029 011f 3A       		.uleb128 0x3a
 1030 0120 0B       		.uleb128 0xb
 1031 0121 3B       		.uleb128 0x3b
 1032 0122 0B       		.uleb128 0xb
 1033 0123 27       		.uleb128 0x27
 1034 0124 19       		.uleb128 0x19
 1035 0125 3C       		.uleb128 0x3c
 1036 0126 19       		.uleb128 0x19
 1037 0127 00       		.byte	0
 1038 0128 00       		.byte	0
 1039 0129 13       		.uleb128 0x13
 1040 012a 05       		.uleb128 0x5
 1041 012b 00       		.byte	0
 1042 012c 49       		.uleb128 0x49
 1043 012d 13       		.uleb128 0x13
 1044 012e 00       		.byte	0
 1045 012f 00       		.byte	0
 1046 0130 00       		.byte	0
 1047              		.section	.debug_loc,"",%progbits
 1048              	.Ldebug_loc0:
 1049              	.LLST0:
 1050 0000 2C000000 		.4byte	.LVL12
 1051 0004 39000000 		.4byte	.LVL13-1
 1052 0008 0100     		.2byte	0x1
 1053 000a 50       		.byte	0x50
 1054 000b 00000000 		.4byte	0
 1055 000f 00000000 		.4byte	0
 1056              		.section	.debug_aranges,"",%progbits
 1057 0000 84000000 		.4byte	0x84
 1058 0004 0200     		.2byte	0x2
 1059 0006 00000000 		.4byte	.Ldebug_info0
 1060 000a 04       		.byte	0x4
 1061 000b 00       		.byte	0
 1062 000c 0000     		.2byte	0
 1063 000e 0000     		.2byte	0
 1064 0010 00000000 		.4byte	.LFB3
 1065 0014 02000000 		.4byte	.LFE3-.LFB3
 1066 0018 00000000 		.4byte	.LFB5
 1067 001c 02000000 		.4byte	.LFE5-.LFB5
 1068 0020 00000000 		.4byte	.LFB6
 1069 0024 0C000000 		.4byte	.LFE6-.LFB6
 1070 0028 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 30


 1071 002c 0C000000 		.4byte	.LFE7-.LFB7
 1072 0030 00000000 		.4byte	.LFB8
 1073 0034 0C000000 		.4byte	.LFE8-.LFB8
 1074 0038 00000000 		.4byte	.LFB9
 1075 003c 14000000 		.4byte	.LFE9-.LFB9
 1076 0040 00000000 		.4byte	.LFB10
 1077 0044 0C000000 		.4byte	.LFE10-.LFB10
 1078 0048 00000000 		.4byte	.LFB11
 1079 004c 0C000000 		.4byte	.LFE11-.LFB11
 1080 0050 00000000 		.4byte	.LFB12
 1081 0054 0C000000 		.4byte	.LFE12-.LFB12
 1082 0058 00000000 		.4byte	.LFB13
 1083 005c 0C000000 		.4byte	.LFE13-.LFB13
 1084 0060 00000000 		.4byte	.LFB14
 1085 0064 0C000000 		.4byte	.LFE14-.LFB14
 1086 0068 00000000 		.4byte	.LFB15
 1087 006c 12000000 		.4byte	.LFE15-.LFB15
 1088 0070 00000000 		.4byte	.LFB2
 1089 0074 40000000 		.4byte	.LFE2-.LFB2
 1090 0078 00000000 		.4byte	.LFB4
 1091 007c 1C000000 		.4byte	.LFE4-.LFB4
 1092 0080 00000000 		.4byte	0
 1093 0084 00000000 		.4byte	0
 1094              		.section	.debug_ranges,"",%progbits
 1095              	.Ldebug_ranges0:
 1096 0000 00000000 		.4byte	.LFB3
 1097 0004 02000000 		.4byte	.LFE3
 1098 0008 00000000 		.4byte	.LFB5
 1099 000c 02000000 		.4byte	.LFE5
 1100 0010 00000000 		.4byte	.LFB6
 1101 0014 0C000000 		.4byte	.LFE6
 1102 0018 00000000 		.4byte	.LFB7
 1103 001c 0C000000 		.4byte	.LFE7
 1104 0020 00000000 		.4byte	.LFB8
 1105 0024 0C000000 		.4byte	.LFE8
 1106 0028 00000000 		.4byte	.LFB9
 1107 002c 14000000 		.4byte	.LFE9
 1108 0030 00000000 		.4byte	.LFB10
 1109 0034 0C000000 		.4byte	.LFE10
 1110 0038 00000000 		.4byte	.LFB11
 1111 003c 0C000000 		.4byte	.LFE11
 1112 0040 00000000 		.4byte	.LFB12
 1113 0044 0C000000 		.4byte	.LFE12
 1114 0048 00000000 		.4byte	.LFB13
 1115 004c 0C000000 		.4byte	.LFE13
 1116 0050 00000000 		.4byte	.LFB14
 1117 0054 0C000000 		.4byte	.LFE14
 1118 0058 00000000 		.4byte	.LFB15
 1119 005c 12000000 		.4byte	.LFE15
 1120 0060 00000000 		.4byte	.LFB2
 1121 0064 40000000 		.4byte	.LFE2
 1122 0068 00000000 		.4byte	.LFB4
 1123 006c 1C000000 		.4byte	.LFE4
 1124 0070 00000000 		.4byte	0
 1125 0074 00000000 		.4byte	0
 1126              		.section	.debug_line,"",%progbits
 1127              	.Ldebug_line0:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 31


 1128 0000 70010000 		.section	.debug_str,"MS",%progbits,1
 1128      02005C00 
 1128      00000201 
 1128      FB0E0D00 
 1128      01010101 
 1129              	.LASF17:
 1130 0000 4C656674 		.ascii	"Left_Phase_Counter_Enable\000"
 1130      5F506861 
 1130      73655F43 
 1130      6F756E74 
 1130      65725F45 
 1131              	.LASF15:
 1132 001a 72656733 		.ascii	"reg32\000"
 1132      3200
 1133              	.LASF26:
 1134 0020 4C656674 		.ascii	"Left_Phase_Counter_WritePeriod\000"
 1134      5F506861 
 1134      73655F43 
 1134      6F756E74 
 1134      65725F57 
 1135              	.LASF23:
 1136 003f 4C656674 		.ascii	"Left_Phase_Counter_ReadStatusRegister\000"
 1136      5F506861 
 1136      73655F43 
 1136      6F756E74 
 1136      65725F52 
 1137              	.LASF28:
 1138 0065 4C656674 		.ascii	"Left_Phase_Counter_ReadPeriod\000"
 1138      5F506861 
 1138      73655F43 
 1138      6F756E74 
 1138      65725F52 
 1139              	.LASF18:
 1140 0083 4C656674 		.ascii	"Left_Phase_Counter_Stop\000"
 1140      5F506861 
 1140      73655F43 
 1140      6F756E74 
 1140      65725F53 
 1141              	.LASF27:
 1142 009b 70657269 		.ascii	"period\000"
 1142      6F6400
 1143              	.LASF3:
 1144 00a2 73686F72 		.ascii	"short unsigned int\000"
 1144      7420756E 
 1144      7369676E 
 1144      65642069 
 1144      6E7400
 1145              	.LASF8:
 1146 00b5 756E7369 		.ascii	"unsigned int\000"
 1146      676E6564 
 1146      20696E74 
 1146      00
 1147              	.LASF29:
 1148 00c2 4C656674 		.ascii	"Left_Phase_Counter_WriteCompare\000"
 1148      5F506861 
 1148      73655F43 
 1148      6F756E74 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 32


 1148      65725F57 
 1149              	.LASF34:
 1150 00e2 4C656674 		.ascii	"Left_Phase_Counter_Start\000"
 1150      5F506861 
 1150      73655F43 
 1150      6F756E74 
 1150      65725F53 
 1151              	.LASF11:
 1152 00fb 666C6F61 		.ascii	"float\000"
 1152      7400
 1153              	.LASF22:
 1154 0101 636F756E 		.ascii	"counter\000"
 1154      74657200 
 1155              	.LASF7:
 1156 0109 6C6F6E67 		.ascii	"long long unsigned int\000"
 1156      206C6F6E 
 1156      6720756E 
 1156      7369676E 
 1156      65642069 
 1157              	.LASF1:
 1158 0120 756E7369 		.ascii	"unsigned char\000"
 1158      676E6564 
 1158      20636861 
 1158      7200
 1159              	.LASF24:
 1160 012e 4C656674 		.ascii	"Left_Phase_Counter_ReadCounter\000"
 1160      5F506861 
 1160      73655F43 
 1160      6F756E74 
 1160      65725F52 
 1161              	.LASF14:
 1162 014d 72656738 		.ascii	"reg8\000"
 1162      00
 1163              	.LASF5:
 1164 0152 6C6F6E67 		.ascii	"long unsigned int\000"
 1164      20756E73 
 1164      69676E65 
 1164      6420696E 
 1164      7400
 1165              	.LASF9:
 1166 0164 75696E74 		.ascii	"uint8\000"
 1166      3800
 1167              	.LASF21:
 1168 016a 696E7465 		.ascii	"interruptsMask\000"
 1168      72727570 
 1168      74734D61 
 1168      736B00
 1169              	.LASF39:
 1170 0179 4C656674 		.ascii	"Left_Phase_Counter_initVar\000"
 1170      5F506861 
 1170      73655F43 
 1170      6F756E74 
 1170      65725F69 
 1171              	.LASF36:
 1172 0194 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Left_Phase_Counter.c\000"
 1172      6E657261 
 1172      7465645F 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 33


 1172      536F7572 
 1172      63655C50 
 1173              	.LASF12:
 1174 01c2 646F7562 		.ascii	"double\000"
 1174      6C6500
 1175              	.LASF31:
 1176 01c9 4C656674 		.ascii	"Left_Phase_Counter_ReadCompare\000"
 1176      5F506861 
 1176      73655F43 
 1176      6F756E74 
 1176      65725F52 
 1177              	.LASF10:
 1178 01e8 75696E74 		.ascii	"uint32\000"
 1178      333200
 1179              	.LASF40:
 1180 01ef 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1180      74657243 
 1180      72697469 
 1180      63616C53 
 1180      65637469 
 1181              	.LASF20:
 1182 0206 4C656674 		.ascii	"Left_Phase_Counter_WriteCounter\000"
 1182      5F506861 
 1182      73655F43 
 1182      6F756E74 
 1182      65725F57 
 1183              	.LASF25:
 1184 0226 4C656674 		.ascii	"Left_Phase_Counter_ReadCapture\000"
 1184      5F506861 
 1184      73655F43 
 1184      6F756E74 
 1184      65725F52 
 1185              	.LASF41:
 1186 0245 43794578 		.ascii	"CyExitCriticalSection\000"
 1186      69744372 
 1186      69746963 
 1186      616C5365 
 1186      6374696F 
 1187              	.LASF32:
 1188 025b 4C656674 		.ascii	"Left_Phase_Counter_ClearFIFO\000"
 1188      5F506861 
 1188      73655F43 
 1188      6F756E74 
 1188      65725F43 
 1189              	.LASF16:
 1190 0278 73697A65 		.ascii	"sizetype\000"
 1190      74797065 
 1190      00
 1191              	.LASF6:
 1192 0281 6C6F6E67 		.ascii	"long long int\000"
 1192      206C6F6E 
 1192      6720696E 
 1192      7400
 1193              	.LASF38:
 1194 028f 4C656674 		.ascii	"Left_Phase_Counter_interruptState\000"
 1194      5F506861 
 1194      73655F43 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 34


 1194      6F756E74 
 1194      65725F69 
 1195              	.LASF13:
 1196 02b1 63686172 		.ascii	"char\000"
 1196      00
 1197              	.LASF33:
 1198 02b6 4C656674 		.ascii	"Left_Phase_Counter_Init\000"
 1198      5F506861 
 1198      73655F43 
 1198      6F756E74 
 1198      65725F49 
 1199              	.LASF35:
 1200 02ce 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1200      4320342E 
 1200      392E3320 
 1200      32303135 
 1200      30333033 
 1201 0301 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1201      20726576 
 1201      6973696F 
 1201      6E203232 
 1201      31323230 
 1202 0334 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1202      66756E63 
 1202      74696F6E 
 1202      2D736563 
 1202      74696F6E 
 1203              	.LASF2:
 1204 035c 73686F72 		.ascii	"short int\000"
 1204      7420696E 
 1204      7400
 1205              	.LASF37:
 1206 0366 443A5C44 		.ascii	"D:\\Documents\\PSoC Creator\\IdealArlobot\\SingleBo"
 1206      6F63756D 
 1206      656E7473 
 1206      5C50536F 
 1206      43204372 
 1207 0395 61726444 		.ascii	"ardDesign-046.cydsn\000"
 1207      65736967 
 1207      6E2D3034 
 1207      362E6379 
 1207      64736E00 
 1208              	.LASF19:
 1209 03a9 4C656674 		.ascii	"Left_Phase_Counter_SetInterruptMode\000"
 1209      5F506861 
 1209      73655F43 
 1209      6F756E74 
 1209      65725F53 
 1210              	.LASF4:
 1211 03cd 6C6F6E67 		.ascii	"long int\000"
 1211      20696E74 
 1211      00
 1212              	.LASF0:
 1213 03d6 7369676E 		.ascii	"signed char\000"
 1213      65642063 
 1213      68617200 
 1214              	.LASF30:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\ccP2yGz9.s 			page 35


 1215 03e2 636F6D70 		.ascii	"compare\000"
 1215      61726500 
 1216              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
